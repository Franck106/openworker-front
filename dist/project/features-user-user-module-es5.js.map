{"version":3,"sources":["webpack:///src/app/features/user/pages/activity/activity.page.ts","webpack:///src/app/features/user/pages/activity/activity.page.html","webpack:///src/app/shared/components/five-star-rating/five-star-rating.component.ts","webpack:///src/app/shared/components/five-star-rating/five-star-rating.component.html","webpack:///src/app/features/user/services/activity.service.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/features/user/pages/account/account.page.ts","webpack:///src/app/features/user/pages/account/account.page.html","webpack:///src/app/features/user/user-routing.module.ts","webpack:///src/app/features/user/user.module.ts"],"names":["ActivityPage","authService","activityService","datePipe","activity$","currentUser$","pipe","user","getUserActivity","id","prestation","delivered","cancelled","valide","date","transform","templateUrl","styleUrls","providers","FiveStarRatingComponent","ratings","Array","fill","selector","ActivityService","http","userId","params","set","toString","get","orchestraUrl","providedIn","SharedModule","declarations","exports","imports","AccountPage","subscribe","firstName","lastName","address","postCode","city","phoneNumber","email","Error","routes","path","component","canActivate","UserRoutingModule","forChild","UserModule"],"mappings":"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","file":"features-user-user-module-es5.js","sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {SimpleAuthenticationService} from '../../../authentication/services/simple-authentication.service';\nimport {Observable} from 'rxjs';\nimport {User} from '../../../catalogue/services/models/user';\nimport {ActivityService} from '../../services/activity.service';\nimport {filter, switchMap} from 'rxjs/operators';\nimport {UserActivity} from '../../../catalogue/services/models/user-activity';\nimport {Prestation} from '../../../catalogue/services/models/prestation';\nimport {DatePipe} from '@angular/common';\n\n@Component({\n  templateUrl: './activity.page.html',\n  styleUrls: ['./activity.page.css'],\n  providers: [DatePipe]\n})\nexport class ActivityPage implements OnInit {\n\n  activity$: Observable<UserActivity | undefined>;\n\n  constructor(private authService: SimpleAuthenticationService,\n              private activityService: ActivityService,\n              private datePipe: DatePipe) {\n    this.activity$ = authService.currentUser$.pipe(\n      // @ts-ignore\n      filter(user => !!user),\n      // @ts-ignore\n      switchMap((user: User) => this.activityService.getUserActivity(user.id)),\n    );\n  }\n\n  ngOnInit(): void {\n  }\n\n  getStatus(prestation: Prestation): string {\n    return prestation.delivered ? 'Terminé' :\n      (prestation.cancelled ? 'Annulée' :\n        (prestation.valide ? 'En cours' : 'En attente'));\n  }\n\n  formatDate(date: Date): string | null {\n    if (date != null) {\n      return this.datePipe.transform(date, 'dd/MM/yyyy');\n    }\n\n    return '-';\n  }\n}\n","<div class=\"text-center mt-4\" *ngIf=\"activity$ | async as activity\">\n    <h3>Mes annonces</h3>\n    <div id=\"flexCategories\" class=\"d-flex flex-row justify-content-center\">\n        <app-proposal-list [proposals]=\"activity.userProposals\">\n        </app-proposal-list>\n    </div>\n\n    <hr class=\"mt-2 mb-3\">\n\n    <h3>Demandes reçues</h3>\n    <div id=\"myDemands\" class=\"container mt-3 mb-4\">\n        <div class=\"row table-header\">\n            <div class=\"col-sm\">Statut</div>\n            <div class=\"col-sm\">Service</div>\n            <div class=\"col-sm\">Client</div>\n            <div class=\"col-sm\">Début</div>\n            <div class=\"col-sm\">Fin</div>\n            <div class=\"col-sm\">Prix</div>\n            <div class=\"col-sm\">Avis reçu</div>\n        </div>\n\n        <div *ngFor=\"let dem of activity.userDemands\" class=\"row\">\n            <div class=\"col-sm\">{{getStatus(dem)}}</div>\n            <div class=\"col-sm\">{{dem.proposal.name}}</div>\n            <div class=\"col-sm\">{{dem.customer.firstName}} {{dem.customer.lastName}}</div>\n            <div class=\"col-sm\">{{formatDate(dem.startDate)}}</div>\n            <div class=\"col-sm\">{{formatDate(dem.endDate)}}</div>\n            <div class=\"col-sm\">{{dem.proposal.price}} €</div>\n            <div class=\"col-sm\">\n                <ng-container *ngIf=\"dem.cancelled ; else providerRating\">\n                    -\n                </ng-container>\n                <ng-template #providerRating>\n                    <app-five-star-rating [ratings]=\"dem.providerRating\"></app-five-star-rating>\n                </ng-template>\n            </div>\n        </div>\n    </div>\n\n    <hr class=\"mt-2 mb-3\">\n\n    <h3>Demandes envoyées</h3>\n    <div id=\"myPrestations\" class=\"container mt-3 mb-4\">\n        <div class=\"row table-header\">\n            <div class=\"col-sm\">Statut</div>\n            <div class=\"col-sm\">Service</div>\n            <div class=\"col-sm\">Prestataire</div>\n            <div class=\"col-sm\">Début</div>\n            <div class=\"col-sm\">Fin</div>\n            <div class=\"col-sm\">Prix</div>\n            <div class=\"col-sm\">Votre avis</div>\n        </div>\n\n        <div *ngFor=\"let prestation of activity.userPrestations\" class=\"row\">\n            <div class=\"col-sm\">{{getStatus(prestation)}}</div>\n            <div class=\"col-sm\">{{prestation.proposal.name}}</div>\n            <div class=\"col-sm\">{{prestation.proposal.provider.firstName}} {{prestation.proposal.provider.lastName}}</div>\n            <div class=\"col-sm\">{{formatDate(prestation.startDate)}}</div>\n            <div class=\"col-sm\">{{formatDate(prestation.endDate)}}</div>\n            <div class=\"col-sm\">{{prestation.proposal.price}} €</div>\n            <div class=\"col-sm\">\n                <ng-container *ngIf=\"prestation.providerRating && ! prestation.cancelled; else conclude\">\n                    <app-five-star-rating [ratings]=\"prestation.providerRating\"></app-five-star-rating>\n                </ng-container>\n                <ng-template #conclude>\n                    <ng-container *ngIf=\"prestation.cancelled ; else concludeLink\">\n                        -\n                    </ng-container>\n                    <ng-template #concludeLink>\n                        <a [routerLink]=\"'/catalogue/feedback/' + prestation.id\">Conclure</a>\n                    </ng-template>\n                </ng-template>\n            </div>\n        </div>\n    </div>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-five-star-rating',\n  templateUrl: './five-star-rating.component.html',\n  styleUrls: ['./five-star-rating.component.css']\n})\nexport class FiveStarRatingComponent implements OnInit {\n\n  @Input()\n  ratings: number;\n\n  get text(): string { return this.ratings + '/5'; }\n\n  get ratingArray(): number[] {\n    return new Array(this.ratings).fill(0);\n  }\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div [title]=\"text\">\n    <img *ngFor=\"let r of ratingArray\" class=\"star-image\" src=\"assets/images/star.png\" [alt]=\"text\"/>\n</div>\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {UserActivity} from '../../catalogue/services/models/user-activity';\nimport {Observable} from 'rxjs';\nimport {environment} from '../../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActivityService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  public getUserActivity(userId: number): Observable<UserActivity> {\n    const params = new HttpParams().set('userId', userId.toString());\n    return this.http.get<UserActivity>(`${environment.orchestraUrl}/api/orchestrator/myactivity`,\n      { params });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FiveStarRatingComponent } from './components/five-star-rating/five-star-rating.component';\n\n\n\n@NgModule({\n  declarations: [FiveStarRatingComponent],\n  exports: [\n    FiveStarRatingComponent\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class SharedModule { }\n","import {Component, OnInit} from '@angular/core';\nimport {SimpleAuthenticationService} from '../../../authentication/services/simple-authentication.service';\nimport {Observable} from 'rxjs';\nimport {User} from '../../../catalogue/services/models/user';\nimport {filter, take} from 'rxjs/operators';\n\n@Component({\n    templateUrl: './account.page.html',\n    styleUrls: ['./account.page.css']\n})\nexport class AccountPage implements OnInit {\n\n    currentUser$: Observable<User | null>;\n\n    errorMessage?: string;\n\n    private firstName?: string;\n    private lastName?: string;\n    private address?: string;\n    private postCode?: string;\n    private city?: string;\n    private phoneNumber?: string;\n    private email?: string;\n\n    constructor(private authService: SimpleAuthenticationService) {\n        this.currentUser$ = authService.currentUser$;\n\n        this.currentUser$.pipe(\n          filter((user) => user != null),\n          take(1),\n        ).subscribe((user) => {\n            this.firstName = user?.firstName;\n            this.lastName = user?.lastName;\n            this.address = user?.address;\n            this.postCode = user?.postCode;\n            this.city = user?.city;\n            this.phoneNumber = user?.phoneNumber;\n            this.email = user?.email;\n        });\n    }\n\n    ngOnInit(): void {\n    }\n\n    onSubmit(): void {\n        throw Error('Not implemented');\n    }\n}\n","<div class=\"form-group\" style=\"padding:3%\">\n    <h4>Mon compte</h4>\n\n    <div style=\"padding: 10px\" *ngIf=\"currentUser$ | async as user\">\n        <span class=\"alert alert-info\" style=\"display: none;\" id=\"emptyOptionalFieldWarning\">\n            Vous n'avez pas encore renseigné vos informations personnelles. Celles-ci sont indispensables pour proposer\n            ou faire appel à un service sur notre plateforme.\n        </span>\n\n        <div class=\"form-group\">\n            <label for=\"lastName\">Nom</label>\n            <input type=\"text\" class=\"form-control\" id=\"lastName\" [value]=\"user.lastName\"/>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"firstName\">Prénom</label>\n            <input type=\"text\" class=\"form-control\" id=\"firstName\" [value]=\"user.firstName\"/>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"email\">Email</label>\n            <input type=\"text\" class=\"form-control\" id=\"email\" readonly [value]=\"user.email\"/>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"phoneNumber\">Téléphone</label>\n            <input type=\"text\" class=\"form-control\" id=\"phoneNumber\" [value]=\"user.phoneNumber\"/>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"address\">Adresse</label>\n            <input type=\"text\" class=\"form-control\" id=\"address\" [value]=\"user.address\"/>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"postCode\">Code postal</label>\n            <input type=\"text\" class=\"form-control\" id=\"postCode\" [value]=\"user.postCode\"/>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"city\">Ville</label>\n            <input type=\"text\" class=\"form-control\" id=\"city\" [value]=\"user.city\"/>\n        </div>\n        <div class=\"form-group\">\n            <input type=\"button\" class=\"btn btn-primary mr-1\" id=\"sendDetails\" value=\"Envoyer\" disabled/>\n        </div>\n        <div style=\"padding: 10px\" *ngIf=\"errorMessage && errorMessage.length > 0\">\n            <span class=\"alert alert-danger\" id=\"msg\">{{errorMessage}}</span>\n        </div>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {AccountPage} from './pages/account/account.page';\nimport {AuthGuard} from '../authentication/guards/auth.guard';\nimport {ActivityPage} from './pages/activity/activity.page';\n\nconst routes: Routes = [\n  { path: 'activity', component: ActivityPage, canActivate: [AuthGuard] },\n  { path: 'account', component: AccountPage, canActivate: [AuthGuard] },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {AccountPage} from './pages/account/account.page';\nimport {ActivityPage} from './pages/activity/activity.page';\nimport {UserRoutingModule} from './user-routing.module';\nimport {CatalogueModule} from '../catalogue/catalogue.module';\nimport {SharedModule} from '../../shared/shared.module';\n\n@NgModule({\n  declarations: [\n    AccountPage,\n    ActivityPage\n  ],\n  imports: [\n    CommonModule,\n    UserRoutingModule,\n    CatalogueModule,\n    SharedModule,\n  ]\n})\nexport class UserModule { }\n"]}