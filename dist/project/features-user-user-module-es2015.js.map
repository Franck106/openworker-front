{"version":3,"sources":["./src/app/features/user/pages/activity/activity.page.ts","./src/app/features/user/pages/activity/activity.page.html","./src/app/shared/components/five-star-rating/five-star-rating.component.ts","./src/app/shared/components/five-star-rating/five-star-rating.component.html","./src/app/features/user/services/activity.service.ts","./src/app/shared/shared.module.ts","./src/app/features/user/pages/account/account.page.ts","./src/app/features/user/pages/account/account.page.html","./src/app/features/user/user-routing.module.ts","./src/app/features/user/user.module.ts"],"names":[],"mappings":"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","file":"features-user-user-module-es2015.js","sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {SimpleAuthenticationService} from '../../../authentication/services/simple-authentication.service';\nimport {Observable} from 'rxjs';\nimport {User} from '../../../catalogue/services/models/user';\nimport {ActivityService} from '../../services/activity.service';\nimport {filter, switchMap} from 'rxjs/operators';\nimport {UserActivity} from '../../../catalogue/services/models/user-activity';\nimport {Prestation} from '../../../catalogue/services/models/prestation';\nimport {DatePipe} from '@angular/common';\n\n@Component({\n  templateUrl: './activity.page.html',\n  styleUrls: ['./activity.page.css'],\n  providers: [DatePipe]\n})\nexport class ActivityPage implements OnInit {\n\n  activity$: Observable<UserActivity | undefined>;\n\n  constructor(private authService: SimpleAuthenticationService,\n              private activityService: ActivityService,\n              private datePipe: DatePipe) {\n    this.activity$ = authService.currentUser$.pipe(\n      // @ts-ignore\n      filter(user => !!user),\n      // @ts-ignore\n      switchMap((user: User) => this.activityService.getUserActivity(user.id)),\n    );\n  }\n\n  ngOnInit(): void {\n  }\n\n  getStatus(prestation: Prestation): string {\n    return prestation.delivered ? 'Terminé' :\n      (prestation.cancelled ? 'Annulée' :\n        (prestation.valide ? 'En cours' : 'En attente'));\n  }\n\n  formatDate(date: Date): string | null {\n    if (date != null) {\n      return this.datePipe.transform(date, 'dd/MM/yyyy');\n    }\n\n    return '-';\n  }\n}\n","<div class=\"text-center mt-4\" *ngIf=\"activity$ | async as activity\">\n    <h3>Mes annonces</h3>\n    <div id=\"flexCategories\" class=\"d-flex flex-row justify-content-center\">\n        <app-proposal-list [proposals]=\"activity.userProposals\">\n        </app-proposal-list>\n    </div>\n\n    <hr class=\"mt-2 mb-3\">\n\n    <h3>Demandes reçues</h3>\n    <div id=\"myDemands\" class=\"container mt-3 mb-4\">\n        <div class=\"row table-header\">\n            <div class=\"col-sm\">Statut</div>\n            <div class=\"col-sm\">Service</div>\n            <div class=\"col-sm\">Client</div>\n            <div class=\"col-sm\">Début</div>\n            <div class=\"col-sm\">Fin</div>\n            <div class=\"col-sm\">Prix</div>\n            <div class=\"col-sm\">Avis reçu</div>\n        </div>\n\n        <div *ngFor=\"let dem of activity.userDemands\" class=\"row\">\n            <div class=\"col-sm\">{{getStatus(dem)}}</div>\n            <div class=\"col-sm\">{{dem.proposal.name}}</div>\n            <div class=\"col-sm\">{{dem.customer.firstName}} {{dem.customer.lastName}}</div>\n            <div class=\"col-sm\">{{formatDate(dem.startDate)}}</div>\n            <div class=\"col-sm\">{{formatDate(dem.endDate)}}</div>\n            <div class=\"col-sm\">{{dem.proposal.price}} €</div>\n            <div class=\"col-sm\">\n                <ng-container *ngIf=\"dem.cancelled ; else providerRating\">\n                    -\n                </ng-container>\n                <ng-template #providerRating>\n                    <app-five-star-rating [ratings]=\"dem.providerRating\"></app-five-star-rating>\n                </ng-template>\n            </div>\n        </div>\n    </div>\n\n    <hr class=\"mt-2 mb-3\">\n\n    <h3>Demandes envoyées</h3>\n    <div id=\"myPrestations\" class=\"container mt-3 mb-4\">\n        <div class=\"row table-header\">\n            <div class=\"col-sm\">Statut</div>\n            <div class=\"col-sm\">Service</div>\n            <div class=\"col-sm\">Prestataire</div>\n            <div class=\"col-sm\">Début</div>\n            <div class=\"col-sm\">Fin</div>\n            <div class=\"col-sm\">Prix</div>\n            <div class=\"col-sm\">Votre avis</div>\n        </div>\n\n        <div *ngFor=\"let prestation of activity.userPrestations\" class=\"row\">\n            <div class=\"col-sm\">{{getStatus(prestation)}}</div>\n            <div class=\"col-sm\">{{prestation.proposal.name}}</div>\n            <div class=\"col-sm\">{{prestation.proposal.provider.firstName}} {{prestation.proposal.provider.lastName}}</div>\n            <div class=\"col-sm\">{{formatDate(prestation.startDate)}}</div>\n            <div class=\"col-sm\">{{formatDate(prestation.endDate)}}</div>\n            <div class=\"col-sm\">{{prestation.proposal.price}} €</div>\n            <div class=\"col-sm\">\n                <ng-container *ngIf=\"prestation.providerRating && ! prestation.cancelled; else conclude\">\n                    <app-five-star-rating [ratings]=\"prestation.providerRating\"></app-five-star-rating>\n                </ng-container>\n                <ng-template #conclude>\n                    <ng-container *ngIf=\"prestation.cancelled ; else concludeLink\">\n                        -\n                    </ng-container>\n                    <ng-template #concludeLink>\n                        <a [routerLink]=\"'/catalogue/feedback/' + prestation.id\">Conclure</a>\n                    </ng-template>\n                </ng-template>\n            </div>\n        </div>\n    </div>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-five-star-rating',\n  templateUrl: './five-star-rating.component.html',\n  styleUrls: ['./five-star-rating.component.css']\n})\nexport class FiveStarRatingComponent implements OnInit {\n\n  @Input()\n  ratings: number;\n\n  get text(): string { return this.ratings + '/5'; }\n\n  get ratingArray(): number[] {\n    return new Array(this.ratings).fill(0);\n  }\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div [title]=\"text\">\n    <img *ngFor=\"let r of ratingArray\" class=\"star-image\" src=\"assets/images/star.png\" [alt]=\"text\"/>\n</div>\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {UserActivity} from '../../catalogue/services/models/user-activity';\nimport {Observable} from 'rxjs';\nimport {environment} from '../../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActivityService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  public getUserActivity(userId: number): Observable<UserActivity> {\n    const params = new HttpParams().set('userId', userId.toString());\n    return this.http.get<UserActivity>(`${environment.orchestraUrl}/api/orchestrator/myactivity`,\n      { params });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FiveStarRatingComponent } from './components/five-star-rating/five-star-rating.component';\n\n\n\n@NgModule({\n  declarations: [FiveStarRatingComponent],\n  exports: [\n    FiveStarRatingComponent\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class SharedModule { }\n","import {Component, OnInit} from '@angular/core';\nimport {SimpleAuthenticationService} from '../../../authentication/services/simple-authentication.service';\nimport {Observable} from 'rxjs';\nimport {User} from '../../../catalogue/services/models/user';\nimport {filter, take} from 'rxjs/operators';\n\n@Component({\n    templateUrl: './account.page.html',\n    styleUrls: ['./account.page.css']\n})\nexport class AccountPage implements OnInit {\n\n    currentUser$: Observable<User | null>;\n\n    errorMessage?: string;\n\n    private firstName?: string;\n    private lastName?: string;\n    private address?: string;\n    private postCode?: string;\n    private city?: string;\n    private phoneNumber?: string;\n    private email?: string;\n\n    constructor(private authService: SimpleAuthenticationService) {\n        this.currentUser$ = authService.currentUser$;\n\n        this.currentUser$.pipe(\n          filter((user) => user != null),\n          take(1),\n        ).subscribe((user) => {\n            this.firstName = user?.firstName;\n            this.lastName = user?.lastName;\n            this.address = user?.address;\n            this.postCode = user?.postCode;\n            this.city = user?.city;\n            this.phoneNumber = user?.phoneNumber;\n            this.email = user?.email;\n        });\n    }\n\n    ngOnInit(): void {\n    }\n\n    onSubmit(): void {\n        throw Error('Not implemented');\n    }\n}\n","<div class=\"form-group\" style=\"padding:3%\">\n    <h4>Mon compte</h4>\n\n    <div style=\"padding: 10px\" *ngIf=\"currentUser$ | async as user\">\n        <span class=\"alert alert-info\" style=\"display: none;\" id=\"emptyOptionalFieldWarning\">\n            Vous n'avez pas encore renseigné vos informations personnelles. Celles-ci sont indispensables pour proposer\n            ou faire appel à un service sur notre plateforme.\n        </span>\n\n        <div class=\"form-group\">\n            <label for=\"lastName\">Nom</label>\n            <input type=\"text\" class=\"form-control\" id=\"lastName\" [value]=\"user.lastName\"/>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"firstName\">Prénom</label>\n            <input type=\"text\" class=\"form-control\" id=\"firstName\" [value]=\"user.firstName\"/>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"email\">Email</label>\n            <input type=\"text\" class=\"form-control\" id=\"email\" readonly [value]=\"user.email\"/>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"phoneNumber\">Téléphone</label>\n            <input type=\"text\" class=\"form-control\" id=\"phoneNumber\" [value]=\"user.phoneNumber\"/>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"address\">Adresse</label>\n            <input type=\"text\" class=\"form-control\" id=\"address\" [value]=\"user.address\"/>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"postCode\">Code postal</label>\n            <input type=\"text\" class=\"form-control\" id=\"postCode\" [value]=\"user.postCode\"/>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"city\">Ville</label>\n            <input type=\"text\" class=\"form-control\" id=\"city\" [value]=\"user.city\"/>\n        </div>\n        <div class=\"form-group\">\n            <input type=\"button\" class=\"btn btn-primary mr-1\" id=\"sendDetails\" value=\"Envoyer\" disabled/>\n        </div>\n        <div style=\"padding: 10px\" *ngIf=\"errorMessage && errorMessage.length > 0\">\n            <span class=\"alert alert-danger\" id=\"msg\">{{errorMessage}}</span>\n        </div>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {AccountPage} from './pages/account/account.page';\nimport {AuthGuard} from '../authentication/guards/auth.guard';\nimport {ActivityPage} from './pages/activity/activity.page';\n\nconst routes: Routes = [\n  { path: 'activity', component: ActivityPage, canActivate: [AuthGuard] },\n  { path: 'account', component: AccountPage, canActivate: [AuthGuard] },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {AccountPage} from './pages/account/account.page';\nimport {ActivityPage} from './pages/activity/activity.page';\nimport {UserRoutingModule} from './user-routing.module';\nimport {CatalogueModule} from '../catalogue/catalogue.module';\nimport {SharedModule} from '../../shared/shared.module';\n\n@NgModule({\n  declarations: [\n    AccountPage,\n    ActivityPage\n  ],\n  imports: [\n    CommonModule,\n    UserRoutingModule,\n    CatalogueModule,\n    SharedModule,\n  ]\n})\nexport class UserModule { }\n"],"sourceRoot":"webpack:///"}