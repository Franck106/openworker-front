{"version":3,"sources":["./src/app/features/authentication/authentication-routing.module.ts","./src/app/features/authentication/pages/login/login.page.ts","./src/app/features/authentication/pages/login/login.page.html","./src/app/features/authentication/authentication.module.ts","./src/app/features/authentication/pages/signup/signup.page.ts","./src/app/features/authentication/pages/signup/signup.page.html"],"names":[],"mappings":"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","file":"features-authentication-authentication-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {LoginPage} from './pages/login/login.page';\nimport {SignupPage} from './pages/signup/signup.page';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginPage },\n  { path: 'signup', component: SignupPage },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthenticationRoutingModule {\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {SimpleAuthenticationService} from '../../services/simple-authentication.service';\nimport {Router} from '@angular/router';\n\n@Component({\n    templateUrl: './login.page.html',\n    styleUrls: ['./login.page.css']\n})\nexport class LoginPage implements OnInit {\n    requiredFields: (keyof LoginPage)[] = [\n        'login', 'password'\n    ];\n\n    fieldErrors = new Map<string, string>();\n\n    login: string;\n    password: string;\n    errorMessage?: string;\n\n    constructor(private authService: SimpleAuthenticationService,\n                private router: Router) {\n    }\n\n    ngOnInit(): void {\n    }\n\n    onLogin(): void {\n        this.errorMessage = undefined;\n\n        if (this.isFormValid()) {\n            this.authService.signIn(this.login, this.password)\n                .subscribe(logged => {\n                    if (logged.error) {\n                        this.errorMessage = logged.error;\n                    } else {\n                        this.router.navigateByUrl('/');\n                    }\n                });\n        } else {\n            this.errorMessage = 'Veuillez renseigner tous les champs.';\n        }\n    }\n\n    hasFieldError(fieldName: string): boolean {\n        return this.fieldErrors.get(fieldName) != null;\n    }\n\n    private isFormValid(): boolean {\n        let errorCount = 0;\n\n        for (const field of this.requiredFields) {\n            const isBlank = ! this[field]\n                || (this[field] as string).trim().length === 0;\n\n            if (isBlank) {\n                this.fieldErrors.set(field, 'required');\n                errorCount++;\n            } else {\n                this.fieldErrors.delete(field);\n            }\n        }\n\n        return errorCount === 0;\n    }\n}\n","<div class=\"form-group\" style=\"padding:3%\">\n    <h4>M'identifier</h4>\n    <div class=\"form-group\">\n        <label for=\"login\">Identifiant</label>\n        <input type=\"text\" class=\"form-control\" id=\"login\" [(ngModel)]=\"login\"/>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"password\">Mot de passe</label>\n        <input type=\"password\" class=\"form-control\" [(ngModel)]=\"password\" id=\"password\"/>\n    </div>\n    <div class=\"form-group\">\n        <input type=\"button\" class=\"btn btn-primary mr-1\" (click)=\"onLogin()\" id=\"btnSearch\" value=\"Envoyer\"/>\n    </div>\n    <div style=\"padding: 10px\" *ngIf=\"errorMessage && errorMessage.length > 0\">\n        <span class=\"alert alert-danger\" id=\"msg\">{{errorMessage}}</span>\n    </div>\n    <a href=\"\" routerLink=\"../signup\">Cr√©er un compte</a>\n</div>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {LoginPage} from './pages/login/login.page';\nimport {AuthenticationRoutingModule} from './authentication-routing.module';\nimport {SignupPage} from './pages/signup/signup.page';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {AuthGuard} from './guards/auth.guard';\n\n@NgModule({\n    declarations: [\n        LoginPage,\n        SignupPage,\n    ],\n    imports: [\n        CommonModule,\n        AuthenticationRoutingModule,\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    providers: [AuthGuard],\n})\nexport class AuthenticationModule {\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport {SimpleAuthenticationService} from '../../services/simple-authentication.service';\nimport {User} from '../../../catalogue/services/models/user';\nimport {Router} from '@angular/router';\n\n@Component({\n  templateUrl: './signup.page.html',\n  styleUrls: ['./signup.page.css']\n})\nexport class SignupPage implements OnInit {\n\n  requiredFields: (keyof SignupPage)[] = [\n      'login', 'email', 'password'\n  ];\n\n  fieldErrors = new Map<string, string>();\n\n  errorMessage?: string;\n\n  login: string;\n  email: string;\n  password: string;\n  lastName: string;\n  firstName: string;\n  phoneNumber: string;\n  address: string;\n  postCode: string;\n  city: string;\n\n  constructor(private authService: SimpleAuthenticationService,\n              private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  onSignup(): void {\n    if (this.isFormValid()) {\n      const user: User = {\n        address: this.address,\n        city: this.city,\n        email: this.email,\n        firstName: this.firstName,\n        lastName: this.lastName,\n        password: this.password,\n        phoneNumber: this.phoneNumber,\n        postCode: this.postCode,\n        login: this.login,\n      };\n\n      this.errorMessage = undefined;\n\n      this.authService.register(user)\n          .subscribe(logged => {\n            if (logged.error) {\n              this.errorMessage = logged.error;\n            } else {\n              this.router.navigateByUrl('/');\n            }\n          });\n    }\n  }\n\n  onDemoButtonClick(): void {\n    throw Error('Not implemented');\n  }\n\n  hasFieldError(fieldName: string): boolean {\n    return this.fieldErrors.get(fieldName) != null;\n  }\n\n  private isFormValid(): boolean {\n    let errorCount = 0;\n\n    for (const field of this.requiredFields) {\n      const isBlank = ! this[field]\n          || (this[field] as string).trim().length === 0;\n\n      if (isBlank) {\n        this.fieldErrors.set(field, 'required');\n        errorCount++;\n      } else {\n        this.fieldErrors.delete(field);\n      }\n    }\n\n    return errorCount === 0;\n  }\n}\n","<div class=\"form-group\" style=\"padding:3%\">\n    <h4>Cr√©er un compte</h4>\n    <div class=\"form-group\">\n        <label for=\"login\">Identifiant*</label>\n        <input type=\"text\"\n               class=\"form-control\"\n               id=\"login\"\n               [(ngModel)]=\"login\"\n               [class.error]=\"hasFieldError('login')\"/>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"email\">Adresse e-mail*</label>\n        <input type=\"text\" class=\"form-control\" id=\"email\" [(ngModel)]=\"email\"\n               [class.error]=\"hasFieldError('email')\"/>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"password\">Mot de passe*</label>\n        <input type=\"password\" class=\"form-control\" id=\"password\" [(ngModel)]=\"password\"\n               [class.error]=\"hasFieldError('password')\"/>\n    </div>\n\n    <span class=\"alert alert-info\" style=\"display: block;\">\n        Les informations suivantes sont requises pour proposer ou faire appel √† un service sur notre plateforme.\n        Vous pourrez les renseigner et les modifier dans votre espace personnel.\n    </span>\n\n    <div class=\"form-group\">\n        <label for=\"lastName\">Nom</label>\n        <input type=\"text\" class=\"form-control\" id=\"lastName\" [(ngModel)]=\"lastName\"/>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"firstName\">Pr√©nom</label>\n        <input type=\"text\" class=\"form-control\" id=\"firstName\" [(ngModel)]=\"firstName\"/>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"phoneNumber\">T√©l√©phone</label>\n        <input type=\"text\" class=\"form-control\" id=\"phoneNumber\" [(ngModel)]=\"phoneNumber\"/>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"address\">Adresse</label>\n        <input type=\"text\" class=\"form-control\" id=\"address\" [(ngModel)]=\"address\"/>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"postCode\">Code postal</label>\n        <input type=\"text\" class=\"form-control\" id=\"postCode\" [(ngModel)]=\"postCode\"/>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"city\">Ville</label>\n        <input type=\"text\" class=\"form-control\" id=\"city\" [(ngModel)]=\"city\"/>\n    </div>\n\n\n    <div class=\"form-group\">\n        <input type=\"button\" class=\"btn btn-primary mr-1\" (click)=\"onSignup()\" id=\"btnSearch\" value=\"Envoyer\"/>\n    </div>\n    <div style=\"padding: 10px\" *ngIf=\"errorMessage && errorMessage.length > 0\">\n        <span class=\"alert alert-danger\" id=\"msg\">{{errorMessage}}</span>\n    </div>\n    <div class=\"link\" routerLink=\"../login\">Je poss√®de d√©j√† un compte</div>\n    <div class=\"link\" (click)=\"onDemoButtonClick()\">D√©mo</div>\n</div>\n"],"sourceRoot":"webpack:///"}